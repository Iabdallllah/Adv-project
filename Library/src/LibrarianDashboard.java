package org.example;

import javafx.beans.property.SimpleStringProperty;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.effect.DropShadow;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Stage;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class LibrarianDashboard {

    private LibrarySystem librarySystem;
    private Librarian librarian;

    public LibrarianDashboard(LibrarySystem librarySystem, Librarian librarian) {
        this.librarySystem = librarySystem;
        this.librarian = librarian;
    }

    public void showLibrarianDashboard(Stage primaryStage) {
        // ุฑุณุงูุฉ ุชุฑุญูุจูุฉ ูุฎุตุตุฉ
        Label welcomeLabel = new Label("๐ Welcome, " + librarian.getName() + "!");
        welcomeLabel.setFont(Font.font("Segoe UI", 24));
        welcomeLabel.setTextFill(Color.WHITE);
        // ุฃุฒุฑุงุฑ ุงููุธุงุฆู ุงููุฎุชููุฉ
        Button addBookBtn = createStyledButton("โ Add a Book", "#27ae60", "#229954");
        Button removeBookBtn = createStyledButton("โ Remove a Book", "#c0392b", "#a93226");
        Button viewBooksBtn = createStyledButton("๐ View All Books", "#2980b9", "#2471a3");
        Button viewMembersBtn = createStyledButton("๐ View All Members", "#8e44ad", "#7d3c98");
        Button logoutBtn = createStyledButton("๐ Logout", "#e67e22", "#d35400");

        // ุชุฑุชูุจ ุงูุนูุงุตุฑ ุฏุงุฎู VBox
        VBox vbox = new VBox(20, welcomeLabel, addBookBtn, removeBookBtn, viewBooksBtn, viewMembersBtn, logoutBtn);
        vbox.setPadding(new Insets(30));
        vbox.setAlignment(Pos.CENTER);
        vbox.setStyle("-fx-background-color: linear-gradient(to bottom right, #2e4053, #34495e);");
        vbox.setEffect(new DropShadow(10, Color.BLACK));
        // ุฅุนุฏุงุฏ ุงููุดูุฏ
        Scene scene = new Scene(vbox, 550, 420);
        primaryStage.setTitle("Librarian Dashboard");
        primaryStage.setScene(scene);
        primaryStage.show();
        // ููุง ุจูุฑุจุท ูู ุฒุฑุงุฑ ุจุงููุธููุฉ ุงููู ุงูููุฑูุถ ูููุฐูุง
        addBookBtn.setOnAction(e -> addBook());
        removeBookBtn.setOnAction(e -> removeBook());
        viewBooksBtn.setOnAction(e -> viewAllBooks());
        viewMembersBtn.setOnAction(e -> viewAllMembers());
        // ุงูุฒุฑุงุฑ ุงูุฎุงุต ุจุชุณุฌูู ุงูุฎุฑูุฌ ุจูุฑุฌุนูุง ููุดุงุดุฉ ุงูุฑุฆูุณูุฉ
        logoutBtn.setOnAction(e -> {
            primaryStage.close();  // ุจูููู ุงูุดุงุดุฉ ุงูุญุงููุฉ
            Main loginForm = new Main();// ุจููุดุฆ ูุงุฆู ูู Main ุนูุดุงู ูุฑุฌุน ูุดุงุดุฉ ุชุณุฌูู ุงูุฏุฎูู
            loginForm.start(new Stage());   // ุชุดุบูู ุงูุดุงุดุฉ ุงูุฌุฏูุฏุฉ
        });


    }
    // ููุซูุฏ ุฎุงุตุฉ ุจุชุตููู ุงูุฒุฑุงุฆุฑ ูุน ุชุฃุซูุฑ hover
    private Button createStyledButton(String text, String color, String hoverColor) {
        Button button = new Button(text);
        button.setPrefWidth(250);
        button.setPrefHeight(45);
        // ุชุตููู ุงูุดูู ุงูุฃุณุงุณู ููุฒุฑุงุฑ
        button.setStyle("-fx-background-color: " + color + "; -fx-text-fill: white; -fx-font-size: 15px; -fx-background-radius: 20;");
        // ุชุบููุฑ ุงูุดูู ููุง ุงููุงูุณ ููุฌู ุนููู
        button.setOnMouseEntered(e -> button.setStyle("-fx-background-color: " + hoverColor + "; -fx-text-fill: white; -fx-font-size: 15px; -fx-background-radius: 20;"));
        // ูุฑุฌุน ููุดูู ุงูุฃุตูู ููุง ุงููุงูุณ ูุจุนุฏ
        button.setOnMouseExited(e -> button.setStyle("-fx-background-color: " + color + "; -fx-text-fill: white; -fx-font-size: 15px; -fx-background-radius: 20;"));
        return button;
    }

    // ุฏู ุงูููุซูุฏ ุงููู ุจุชูุชุญ ููุฑู ูุฅุถุงูุฉ ูุชุงุจ ุฌุฏูุฏ
    private void addBook() {
        Dialog<Book> dialog = new Dialog<>();
        dialog.setTitle("โ Add Book");

        // ุฅูุดุงุก ุงูููุจูุฒ ููู ุญูู
        Label titleLabel = new Label("Title:");
        Label authorLabel = new Label("Author:");
        Label idLabel = new Label("Book ID:");
        titleLabel.setStyle("-fx-font-size: 14px; -fx-text-fill: #2c3e50;");
        authorLabel.setStyle("-fx-font-size: 14px; -fx-text-fill: #2c3e50;");
        idLabel.setStyle("-fx-font-size: 14px; -fx-text-fill: #2c3e50;");

        // ุฅูุดุงุก ุงูุญููู ุงููุตูุฉ ูุฅุฏุฎุงู ุงูุจูุงูุงุช
        TextField titleField = new TextField();
        TextField authorField = new TextField();
        TextField idField = new TextField();
        // ุณุชุงูู ููุญุฏ ููุญููู
        String inputStyle = "-fx-background-color: #ffffff; -fx-border-color: #bdc3c7; -fx-border-radius: 8px; -fx-padding: 6px;";
        titleField.setStyle(inputStyle);
        authorField.setStyle(inputStyle);
        idField.setStyle(inputStyle);
// ุชุฌููุน ุงูุนูุงุตุฑ ุฏุงุฎู VBox
        VBox vbox = new VBox(12, titleLabel, titleField, authorLabel, authorField, idLabel, idField);
        vbox.setPadding(new Insets(20));
        vbox.setStyle("-fx-background-color: #ecf0f1;");
// ูุถุน ุงููVBox ุฏุงุฎู ุงูุฏุงูุงููุฌ
        dialog.getDialogPane().setContent(vbox);
        // ุฒุฑุงุฑ ุงูุฅุถุงูุฉ
        ButtonType addButtonType = new ButtonType("Add", ButtonBar.ButtonData.OK_DONE);
        dialog.getDialogPane().getButtonTypes().addAll(addButtonType, ButtonType.CANCEL);
        // ุชุฎุตูุต ุณุชุงูู ุงูุฒุฑุงุฑ
        Button addBtn = (Button) dialog.getDialogPane().lookupButton(addButtonType);
        addBtn.setStyle("-fx-background-color: #27ae60; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;");
        addBtn.setOnMouseEntered(e -> addBtn.setStyle("-fx-background-color: #1e8449; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;"));
        addBtn.setOnMouseExited(e -> addBtn.setStyle("-fx-background-color: #27ae60; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;"));
// ุฒุฑุงุฑ ุงูุฅูุบุงุก
        Button cancelBtn = (Button) dialog.getDialogPane().lookupButton(ButtonType.CANCEL);
        cancelBtn.setStyle("-fx-background-color: #e74c3c; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;");
        cancelBtn.setOnMouseEntered(e -> cancelBtn.setStyle("-fx-background-color: #c0392b; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;"));
        cancelBtn.setOnMouseExited(e -> cancelBtn.setStyle("-fx-background-color: #e74c3c; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;"));
// ููุง ุงููุณุชุฎุฏู ูุถุบุท Addุ ุจูุฑุฌุน ูุงุฆู ูุชุงุจ ุฌุฏูุฏ
        dialog.setResultConverter(dialogButton -> {
            if (dialogButton == addButtonType) {
                return new Book(titleField.getText(), authorField.getText(), idField.getText());
            }
            return null;
        });
// ููุง ุงููุณุชุฎุฏู ูุถุบุท OKุ ุจูุถูู ุงููุชุงุจ ูููุธุงู ููุงุนุฏุฉ ุงูุจูุงูุงุช
        dialog.showAndWait().ifPresent(book -> {
            librarian.addBook(librarySystem.getBooks(), book);
            updateBookInDatabase(book, "INSERT");
            showAlert(Alert.AlertType.INFORMATION, "Success", "โ Book added successfully!");
        });
    }

// ุงูููุซูุฏ ุงูุฎุงุตุฉ ุจุญุฐู ูุชุงุจ ุจุงุณุชุฎุฏุงู ุงูู ID
    private void removeBook() {
        Dialog<String> dialog = new Dialog<>();
        dialog.setTitle("โ Remove Book");
        // ุงูููุจู ูุญูู ุงูุฅุฏุฎุงู
        Label label = new Label("Book ID:");
        label.setStyle("-fx-font-size: 14px; -fx-text-fill: #2c3e50;");

        TextField idField = new TextField();
        idField.setPromptText("Enter book ID");
        idField.setStyle("-fx-background-color: #ffffff; -fx-border-color: #bdc3c7; -fx-border-radius: 8px; -fx-padding: 6px;");

        VBox vbox = new VBox(12, label, idField);
        vbox.setPadding(new Insets(20));
        vbox.setStyle("-fx-background-color: #ecf0f1;");

        dialog.getDialogPane().setContent(vbox);
        // ุฒุฑุงุฑ ุงูุญุฐู ูุงูุฅูุบุงุก
        ButtonType removeButtonType = new ButtonType("Remove", ButtonBar.ButtonData.OK_DONE);
        dialog.getDialogPane().getButtonTypes().addAll(removeButtonType, ButtonType.CANCEL);

        Button removeBtn = (Button) dialog.getDialogPane().lookupButton(removeButtonType);
        removeBtn.setStyle("-fx-background-color: #c0392b; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;");
        removeBtn.setOnMouseEntered(e -> removeBtn.setStyle("-fx-background-color: #922b21; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;"));
        removeBtn.setOnMouseExited(e -> removeBtn.setStyle("-fx-background-color: #c0392b; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;"));

        Button cancelBtn = (Button) dialog.getDialogPane().lookupButton(ButtonType.CANCEL);
        cancelBtn.setStyle("-fx-background-color: #7f8c8d; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;");
        cancelBtn.setOnMouseEntered(e -> cancelBtn.setStyle("-fx-background-color: #707b7c; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;"));
        cancelBtn.setOnMouseExited(e -> cancelBtn.setStyle("-fx-background-color: #7f8c8d; -fx-text-fill: white; -fx-font-size: 14px; -fx-background-radius: 10px;"));

        dialog.setResultConverter(dialogButton -> {
  // ููุง ุจูุญุฏุฏ ูู ุงููุณุชุฎุฏู ุถุบุท ุนูู ุฒุฑุงุฑ "Remove"ุ ูุฑุฌูุน ุงูู Book ID ุงููู ูุชุจู

            if (dialogButton == removeButtonType) {
                return idField.getText();// ุจูุฑุฌุน ุงูู ID ุงููู ุงููุณุชุฎุฏู ูุชุจู ุนูุดุงู ูุณุชุฎุฏูู ูุงุญููุง
            }
            return null;// ูู ุงููุณุชุฎุฏู ููู ุงูุฏูุงููุฌ ุฃู ุถุบุท Cancelุ ูุด ุจูุฑุฌูุน ุญุงุฌุฉ
        });

        dialog.showAndWait().ifPresent(bookId -> {
            // ุจุนุฏ ูุง ุงููุณุชุฎุฏู ูุถุบุท "Remove" ููุชุฃูุฏ ูู ุงูุญุฐู
            boolean deleted = deleteBookById(bookId); // ุจูุณุชุฏุนู ุฏุงูุฉ ุจุชุญุงูู ุชุญุฐู ุงููุชุงุจ ุจุงูู ID ุฏู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
            if (deleted) {
                // ูู ุงูุญุฐู ุชู ุจูุฌุงุญุ ูุนุฑุถ ุฑุณุงูุฉ ูุฌุงุญ
                showAlert(Alert.AlertType.INFORMATION, "Success", "โ Book removed successfully!");
            } else {
                // ูู ูุนุฑููุงุด ูุญุฐู (ูุซูุงู ุงูู ID ุบูุท)ุ ูุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ
                showAlert(Alert.AlertType.ERROR, "Error", "โ Failed to remove book. Please check the ID.");
            }
        });
    }

    private boolean deleteBookById(String bookId) {
        try (
                // ููุง ุจููุชุญ ุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช Oracle
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "libs", "12345");
                // ุจูุฌูุฒ ุฌููุฉ SQL ูุญุฐู ุงููุชุงุจ ุงููู ุงูู ID ุจุชุงุนู ูุณุงูู ููู bookId ุงููู ุงููุณุชุฎุฏู ูุชุจู
                PreparedStatement stmt = conn.prepareStatement("DELETE FROM BOOKS WHERE ID = ?")) {
            // ุจูุญุฏุฏ ูููุฉ ุงูู ID ูู ุงูุงุณุชุนูุงู
            stmt.setString(1, bookId);
            // ุจูููุฐ ุนูููุฉ ุงูุญุฐู ูุจูุฎุฒู ุนุฏุฏ ุงูุตููู ุงููู ุงุชุฃุซุฑุช (ูุนูู ุนุฏุฏ ุงููุชุจ ุงููู ุงุชุญุฐูุช)
            int rowsAffected = stmt.executeUpdate();
            // ูู ุนุฏุฏ ุงูุตููู ุฃูุชุฑ ูู ุตูุฑุ ูุจูู ุชู ุงูุญุฐู ุจูุฌุงุญ
            return rowsAffected > 0;
        } catch (SQLException e) {
            // ูู ุญุตู ุฎุทุฃ ุฃุซูุงุก ุงูุงุชุตุงู ุฃู ุงูุชูููุฐุ ุจูุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ ูููุณุชุฎุฏู
            showAlert(Alert.AlertType.ERROR, "Database Error", e.getMessage());
            return false;
        }
    }



    private void viewAllBooks() {
        // ุจููุดุฆ ุฌุฏูู ูุนุฑุถ ุงููุชุจ
        TableView<Book> tableView = new TableView<>();
        // ุจูุถูู ุฃุนูุฏุฉ ุงูุฌุฏูู: ID - Title - Author - Status (ูุชุงุญ ุฃู ูุณุชุนุงุฑ)
        tableView.getColumns().addAll(
                createColumn("ID", b -> b.getId()),
                createColumn("Title", b -> b.getTitle()),
                createColumn("Author", b -> b.getAuthor()),
                createColumn("Status", b -> b.isAvailable() ? "โ Available" : "โ Borrowed")
        );

        // ุจูุฌูุจ ุงููุชุจ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        List<Book> books = fetchBooksFromDatabase();

        // ุจูุฑุชุจ ุงููุชุจ ุจุงุณุชุฎุฏุงู ุฎูุงุฑุฒููุฉ Bubble Sort ุญุณุจ ุงูู ID
        bubbleSortBooksById(books);

        // ุจูุนุฑุถ ุงููุชุจ ุงููุฑุชุจุฉ ูู ุฌุฏูู ุงูุนุฑุถ
        tableView.getItems().setAll(books);

        // ุฅูุดุงุก ูุฑุจุน ูุต ููุจุญุซ ุนู ูุชุงุจ ุญุณุจ ุงูู ID
        TextField searchField = new TextField();
        searchField.setPromptText("Enter Book ID to search...");
        searchField.setStyle("-fx-background-color: #ffffff; -fx-border-color: #bdc3c7; -fx-border-radius: 8px; -fx-padding: 6px;");
        // ุฒุฑ ุงูุจุญุซ
        Button searchBtn = createStyledButton("๐ Search", "#2980b9", "#2471a3");
        searchBtn.setOnAction(e -> {
            String bookId = searchField.getText().trim(); // ูุงุฎุฏ ูููุฉ ุงูู ID ุงููู ุงููุณุชุฎุฏู ูุชุจู
            if (!bookId.isEmpty()) {
                // ูุนูู ุจุญุซ ุฎุทู ูู ุงูููุณุช
                Book foundBook = linearSearchBookById(books, bookId);
                if (foundBook != null) {
                    // ูู ููููุง ุงููุชุงุจ ูุนุฑุถ ุฑุณุงูุฉ ูุฌุงุญ
                    showAlert(Alert.AlertType.INFORMATION, "Book Found", "โ Book found: " + foundBook.getTitle());
                } else {
                    // ูู ูุด ููุฌูุฏุ ูุนุฑุถ ุฑุณุงูุฉ ุชุญุฐูุฑ
                    showAlert(Alert.AlertType.WARNING, "Book Not Found", "โ Book with ID: " + bookId + " not found.");
                }
            }
        });
        // ุฒุฑ ุงูุฑุฌูุน
        Button closeBtn = createStyledButton("๐ Back", "#7f8c8d", "#707b7c");
        closeBtn.setOnAction(e -> ((Stage) closeBtn.getScene().getWindow()).close());

        // ุฒุฑ ุงูุชุญุฏูุซ: ูุนูุฏ ุฌูุจ ุงูุจูุงูุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ููุญุฏุซ ุงูุฌุฏูู
        Button refreshBtn = createStyledButton("๐ Refresh", "#16a085", "#138d75");
        refreshBtn.setOnAction(e -> {
            books.clear();// ููุณุญ ุงููุชุจ ุงููุฏููุฉ
            books.addAll(fetchBooksFromDatabase()); // ูุฌูุจูุง ูู ุฌุฏูุฏ
            bubbleSortBooksById(books);// ูุฑุชุจูุง
            tableView.getItems().setAll(books);// ูุนุฑุถูุง ุชุงูู
        });
        // ุจูุญุท ูู ุญุงุฌุฉ ูู VBox ููุนุฑุถูุง ูู ูุงูุฐุฉ ุฌุฏูุฏุฉ
        VBox vbox = new VBox(15, new Label("๐ All Books"), searchField, searchBtn, tableView, refreshBtn, closeBtn);
        vbox.setPadding(new Insets(25));
        vbox.setAlignment(Pos.CENTER);

        Stage stage = new Stage();
        stage.setTitle("All Books");
        stage.setScene(new Scene(vbox, 700, 500));
        stage.show();
    }



    private void viewAllMembers() {
        // ุจููุดุฆ ุฌุฏูู ูุนุฑุถ ุงูุฃุนุถุงุก
        TableView<Member> tableView = new TableView<>();

        // ุจูุถูู ุฃุนูุฏุฉ: ID ู Name
        tableView.getColumns().addAll(
                createColumn("ID", m -> m.getUserID()),
                createColumn("Name", m -> m.getName())
        );

        // ูุฌูุจ ุงูุฃุนุถุงุก ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ููุนุฑุถูู
        tableView.getItems().setAll(fetchMembersFromDatabase());

        // ุฒุฑ ุงูุฑุฌูุน
        Button closeBtn = createStyledButton("๐ Back", "#7f8c8d", "#707b7c");
        closeBtn.setOnAction(e -> ((Stage) closeBtn.getScene().getWindow()).close());

        VBox vbox = new VBox(15, new Label("๐ฅ All Members"), tableView, closeBtn);
        vbox.setPadding(new Insets(25));
        vbox.setAlignment(Pos.CENTER);

        Stage stage = new Stage();
        stage.setTitle("All Members");
        stage.setScene(new Scene(vbox, 700, 500));
        stage.show();
    }


    private List<Member> fetchMembersFromDatabase() {
        List<Member> members = new ArrayList<>();
        try (
                // ุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "libs", "12345");
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT ID, NAME FROM MEMBER_LOGINS")
        ) {
            // ููุฑ ุนูู ูู ุตู ูู ุงููุชูุฌุฉ ููุถูู ุงูุนุถู ุฅูู ุงูููุณุช
            while (rs.next()) {
                int id = rs.getInt("ID");
                String name = rs.getString("NAME");

                // ุจูุญููู ุงูู ID ูุณุชุฑููุฌ ุนูุดุงู ูุชูุงุดู ูุน ุงูู Member class
                members.add(new Member(String.valueOf(id), name));
            }
        } catch (SQLException e) {
            // ูู ุญุงูุฉ ุงูุฎุทุฃุ ูุนุฑุถ ุฑุณุงูุฉ ูููุณุชุฎุฏู
            showAlert(Alert.AlertType.ERROR, "Database Error", e.getMessage());
        }
        return members;
    }


    private <T> TableColumn<T, String> createColumn(String title, java.util.function.Function<T, String> mapper) {
        // ุจูุนูู ุนููุฏ ุฌุฏูุฏ ุจุนููุงู ูุนูู
        TableColumn<T, String> column = new TableColumn<>(title);

        // ูุญุฏุฏ ุฅุฒุงู ูุฌูุจ ุงูุจูุงูุงุช ููู ุตู ูู ุงูุนููุฏ ุจุงุณุชุฎุฏุงู ุงูู mapper
        column.setCellValueFactory(cellData -> new SimpleStringProperty(mapper.apply(cellData.getValue())));

        // ูุญุฏุฏ ุดููุฉ ุชูุณููุงุช ููุนููุฏ
        column.setStyle("-fx-font-size: 14px; -fx-alignment: CENTER-LEFT; -fx-font-family: 'Segoe UI';");

        return column;
    }


    private boolean updateBookInDatabase(Book book, String action) {
        try (
                // ุจููุชุญ ุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "libs", "12345")
        ) {
            PreparedStatement stmt;

            if ("INSERT".equalsIgnoreCase(action)) {
                // ูู ุงูุฅุฌุฑุงุก ูู "ุฅุถุงูุฉ" ูุชุงุจ
                stmt = conn.prepareStatement("INSERT INTO BOOKS (ID, TITLE, AUTHOR, STATUS) VALUES (?, ?, ?, ?)");
                stmt.setString(1, book.getId()); // ID ุจุชุงุน ุงููุชุงุจ
                stmt.setString(2, book.getTitle()); // ุงูุนููุงู
                stmt.setString(3, book.getAuthor()); // ุงููุคูู
                stmt.setString(4, book.isAvailable() ? "Available" : "Borrowed"); // ุงูุญุงูุฉ

            } else if ("DELETE".equalsIgnoreCase(action)) {
                // ูู ุงูุฅุฌุฑุงุก ูู "ูุณุญ" ูุชุงุจ
                stmt = conn.prepareStatement("DELETE FROM BOOKS WHERE ID = ?");
                stmt.setString(1, book.getId()); // ID ุงููุชุงุจ ุงููู ุนุงูุฒูู ููุณุญู

            } else {
                return false; // ูู ุงูุฅุฌุฑุงุก ูุด ูุนุฑููุ ุจูุฑุฌูุน false
            }

            stmt.executeUpdate(); // ุชูููุฐ ุงูุฃูุฑ
            return true; // ูู ูููุด ุฃุฎุทุงุกุ ุงูุนูููุฉ ูุฌุญุช
        } catch (SQLException e) {
            // ูู ุญุตู ุฎุทุฃุ ูุนุฑุถ ุฑุณุงูุฉ ูููุณุชุฎุฏู
            showAlert(Alert.AlertType.ERROR, "Database Error", e.getMessage());
            return false;
        }
    }


    private List<Book> fetchBooksFromDatabase() {
        List<Book> books = new ArrayList<>(); // ููุณุช ูุชุญุชูู ุนูู ุงููุชุจ

        try (
                // ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
                Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "libs", "12345");
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT ID, TITLE, AUTHOR, STATUS FROM BOOKS")
        ) {
            while (rs.next()) {
                // ุจููุฑุฃ ุงูุจูุงูุงุช ูู ูู ุตู
                String id = rs.getString("ID");
                String title = rs.getString("TITLE");
                String author = rs.getString("AUTHOR");
                String status = rs.getString("STATUS");

                // ุชุญููู ุงูุญุงูุฉ ุฅูู boolean (ูุชุงุญ ุฃู ูุง)
                boolean isAvailable = "Available".equalsIgnoreCase(status);

                // ุฅูุดุงุก ูุงุฆู Book ุฌุฏูุฏ ูุฅุถุงูุชู ููููุณุช
                books.add(new Book(title, author, id, isAvailable));
            }
        } catch (SQLException e) {
            // ุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ ูู ุญุตูุช ูุดููุฉ
            showAlert(Alert.AlertType.ERROR, "Database Error", e.getMessage());
        }

        return books; // ุฑุฌุนูุง ุงูููุณุช ุงููู ูููุง ูู ุงููุชุจ
    }

    public void bubbleSortBooksById(List<Book> books) {
        int n = books.size();

        // ุจููุดู ุนูู ุงูููุณุช ูุฑุชูู ุนูุดุงู ูุจุฏู ุฃูุงูู ุงููุชุจ ุญุณุจ ุงูุชุฑุชูุจ
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                // ุจููุงุฑู ุจูู ID ุจุชุงุน ุงููุชุงุจ ุงูุญุงูู ูุงููู ุจุนุฏู
                if (books.get(j).getId().compareTo(books.get(j + 1).getId()) > 0) {
                    // ูู ุงูุชุฑุชูุจ ุบูุทุ ูุจุฏููู
                    Book temp = books.get(j);
                    books.set(j, books.get(j + 1));
                    books.set(j + 1, temp);
                }
            }
        }
    }


    public Book linearSearchBookById(List<Book> books, String bookId) {
        for (Book book : books) {
            if (book.getId().equals(bookId)) {
                return book; // ูู ููููุง ุงููุชุงุจุ ูุฑุฌุนู
            }
        }
        return null; // ูู ูููููุงุด ุญุงุฌุฉุ ูุฑุฌุน null
    }

    private void showAlert(Alert.AlertType type, String title, String message) {
        Alert alert = new Alert(type);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
}
